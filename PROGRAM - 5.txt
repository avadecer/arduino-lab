// Pin Definitions
const int switchPin = 2;
const int segmentPins[] = {3, 4, 5, 6, 7, 8, 9};

// Variable Declarations
bool isSwitchOn = false;
int counter = 0;
int delayTime = 1000; // Initial delay time between counts in milliseconds

// Segment Patterns
const byte segmentPatterns[] = {
    B1111110,    // 0
    B0110000,    // 1
    B1101101,    // 2
    B1111001,    // 3
    B0110011,    // 4
    B1011011,    // 5
    B1011111,    // 6
    B1110000,    // 7
    B1111111,    // 8
    B1111011     // 9
};

void setup() {
  // Initialize switch pin as an input
  pinMode(switchPin, INPUT_PULLUP);

  // Initialize segment pins as outputs
  for (int i = 0; i < 7; i++) {
    pinMode(segmentPins[i], OUTPUT);
  }

  // Display "0" initially
  displayPattern(segmentPatterns[0]);
}

void loop() {
  // Read the state of the switch
  isSwitchOn = digitalRead(switchPin);

  if (isSwitchOn) {
    // Start counting
    delay(delayTime); // Delay before starting the count

    // Slow count from 0 to 9
    for (int i = 0; i < 10; i++) {
      displayPattern(segmentPatterns[i]);
      delay(delayTime);
    }

    // Speed up count from 0 to 9
    delayTime = 100;
    for (int i = 0; i < 10; i++) {
      displayPattern(segmentPatterns[i]);
      delay(delayTime);
    }
  }
}

// Function to display a pattern on the seven-segment display
void displayPattern(byte pattern) {
  for (int i = 0; i < 7; i++) {
    digitalWrite(segmentPins[i], bitRead(pattern, i));
  }
}
